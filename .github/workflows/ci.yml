name: Build

on:
  push:
    branches:
    - master
  pull_request:
env:
  GO111MODULE: on
  DEBIAN_FRONTEND: noninteractive
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: golangci/golangci-lint-action@v2
      with:
        version: v1.35
  test:
    strategy:
      matrix:
        os: ['ubuntu-18.04', 'macOS-10.15', 'windows-2019']
        go: ['1.15.x', '1.14.x']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    - run: |
        make gofmt
        go test -race -covermode atomic -coverprofile=profile.cov ./...
      shell: bash
    - uses: shogo82148/actions-goveralls@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-profile: profile.cov
        parallel: true
        job-number: ${{ strategy.job-index }}
  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: shogo82148/actions-goveralls@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
  release:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - run: |
        sudo apt-get update
        sudo apt-get install -y \
          rpm devscripts debhelper fakeroot \
          crossbuild-essential-arm64 crossbuild-essential-armhf
        mkdir -p ~/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - uses: actions/checkout@v2
    - run: |
        go get github.com/x-motemen/gobump/cmd/gobump
        go get github.com/mackerelio/golib/cmd/mackerel-github-release
        make all
        mackerel-github-release && mackerel-github-release -staging
      env:
        GITHUB_TOKEN: ${{ secrets.MACKERELBOT_GITHUB_TOKEN }}
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,action,eventName,ref,workflow,job,took
        username: mkr-release
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.MACKEREL_SLACK_WEBHOOK_URL }}
